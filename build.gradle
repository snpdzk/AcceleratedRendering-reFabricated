plugins {
	id 'fabric-loom' version '1.10-SNAPSHOT'
	id 'maven-publish'
}

version = project.mod_version
group = project.mod_group_id

base {
	archivesName = project.mod_id
}
loom{
	accessWidenerPath = file("src/main/resources/acceleratedrendering.accesswidener")
}

repositories {
	// Add repositories to retrieve artifacts from in here.
	// You should only use this when depending on other mods because
	// Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
	// See https://docs.gradle.org/current/userguide/declaring_repositories.html
	// for more information about repositories.
	maven {
		name = 'ParchmentMC'
		url = 'https://maven.parchmentmc.org'
	}
	maven {
		name = "Terraformers"
		url = "https://maven.terraformersmc.com/"
	}
	maven {
		name = "Fuzs Mod Resources"
		url = "https://raw.githubusercontent.com/Fuzss/modresources/main/maven/"
	}
	exclusiveContent {
		forRepository {
			maven {
				name = "Modrinth"
				url = "https://api.modrinth.com/maven"
			}
		}
		filter {
			includeGroup "maven.modrinth"
		}
	}
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "net.minecraft:minecraft:${project.minecraft_version}"
	mappings loom.layered() {
		officialMojangMappings()
		parchment("org.parchmentmc.data:parchment-1.21.1:2024.11.17@zip")
	}
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	//modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
	modImplementation fabricApi.module("fabric-resource-loader-v0", project.fabric_version)
	modImplementation("com.terraformersmc:modmenu:${project.modmenu_version}"){
		exclude(group: "net.fabricmc.fabric-api", module: "fabric-renderer-indigo")
		exclude(group: "net.fabricmc.fabric-api", module: "fabric-renderer-api-v1")
		exclude(group: "net.fabricmc.fabric-api", module: "fabric-rendering-fluids-v1")
		exclude(group: "net.fabricmc.fabric-api", module: "fabric-rendering-v1")
		exclude(group: "net.fabricmc.fabric-api", module: "fabric-rendering-v0")
		exclude(group: "net.fabricmc.fabric-api", module: "fabric-rendering-data-attachment-v1")
		exclude(group: "net.fabricmc.fabric-api", module: "fabric-renderer-registries-v1")
		exclude(group: "net.fabricmc.fabric-api", module: "fabric-transfer-api-v1")
	}
	modImplementation("fuzs.forgeconfigapiport:forgeconfigapiport-fabric:21.1.3") {
		exclude(group: "net.fabricmc.fabric-api", module: "fabric-renderer-indigo")
		exclude(group: "net.fabricmc.fabric-api", module: "fabric-renderer-api-v1")
		exclude(group: "net.fabricmc.fabric-api", module: "fabric-rendering-fluids-v1")
		exclude(group: "net.fabricmc.fabric-api", module: "fabric-rendering-v1")
		exclude(group: "net.fabricmc.fabric-api", module: "fabric-rendering-v0")
		exclude(group: "net.fabricmc.fabric-api", module: "fabric-rendering-data-attachment-v1")
		exclude(group: "net.fabricmc.fabric-api", module: "fabric-renderer-registries-v1")
		exclude(group: "net.fabricmc.fabric-api", module: "fabric-transfer-api-v1")
	}
	modCompileOnly "maven.modrinth:sodium:mc1.21-0.6.0-beta.1-fabric"
	modCompileOnly "maven.modrinth:iris:1.8.0-beta.2+1.21-fabric"
}

processResources {
	var replaceProperties = [
			minecraft_version      : minecraft_version,
			mod_id                 : mod_id,
			mod_name               : mod_name,
			mod_license            : mod_license,
			mod_version            : mod_version,
			mod_authors            : mod_authors,
			mod_description        : mod_description
	]
	inputs.properties replaceProperties

	filesMatching("fabric.mod.json") {
		expand replaceProperties
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 21
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_21
	targetCompatibility = JavaVersion.VERSION_21
}

jar {
	inputs.property "archivesName", project.base.archivesName

	from("LICENSE") {
		rename { "${it}_${inputs.properties.archivesName}"}
	}
}